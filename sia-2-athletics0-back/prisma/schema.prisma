// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//placeholder so far hehe
model Person {
  id                     Int         @id @default(autoincrement())
  firstName              String @unique
  lastName               String @unique
  emergencyContact       Int
  emergencyContactPerson String
  nationality            String
  weight                 Float
  height                 Float
  bloodType              BloodType      
  acadYear               Int
  statusId               Int         @map("StatusId")
  status                 Status      @relation(fields: [statusId], references: [id])
  personrole             personRole

  // timestaps for when the record is created and last updated
  createdAt DateTime @default(now()) @map("CreatedAt")
  updatedAt DateTime @updatedAt @map("UpdatedAt")

}

model Status {
  id       Int      @id @default(autoincrement())
  type     String
  isActive Boolean
  people   Person[]
}

model Sport {
  id   Int    @id @default(autoincrement())
  name String
  sportType SportType
  //should add student model, connect student model to sport

  createdAt     DateTime       @default(now()) @map("CreatedAt")
  updatedAt     DateTime       @updatedAt @map("UpdatedAt")
}


model Events {
  id            Int            @id @default(autoincrement())
  name          String
  startDate     DateTime
  endDate       DateTime
  eventType     EventType      
  sportId       Int            @map("SportId")
  eventDetails  String?        

  createdAt     DateTime       @default(now()) @map("CreatedAt")
  updatedAt     DateTime       @updatedAt @map("UpdatedAt")
}

model InventoryItems {
id              Int            @id @default(autoincrement())
name            String         @unique
sportId         Int            @map("SportId")
}

enum EventType {
  INTERNAL
  EXTERNAL
}

enum personRole {
  FACULTY
  STUDENT
}
enum SportType {
  MEN
  WOMEN
}
enum BloodType {
  A
  B
  AB 
  O
}
