generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model events {
  id           Int              @id @default(autoincrement())
  name         String
  startDate    DateTime
  endDate      DateTime
  SportId      Int
  CreatedAt    DateTime         @default(now())
  UpdatedAt    DateTime
  eventDetails String?
  eventType    events_eventType
}

model faculty {
  id                     Int      @id @default(autoincrement())
  name                   String
  year                   Int
  emergencyContact       Int
  emergencyContactPerson String
  nationality            String
  weight                 Float
  height                 Float
  bloodType              String
  StatusId               Int
  CreatedAt              DateTime @default(now())
  UpdatedAt              DateTime
  status                 status   @relation(fields: [StatusId], references: [id], map: "Faculty_StatusId_fkey")

  @@index([StatusId], map: "Faculty_StatusId_fkey")
}

model inventoryitems {
  id      Int    @id @default(autoincrement())
  name    String @unique(map: "InventoryItems_name_key")
  SportId Int
}

model sports {
  id            Int                 @id @default(autoincrement())
  name          String
  CreatedAt     DateTime            @default(now())
  UpdatedAt     DateTime
  student       student[]
  sportCat      SportCategory
}

model status {
  id       Int       @id @default(autoincrement())
  isActive Boolean
  type     String
  faculty  faculty[]
}

model student {
  id                 Int      @id @default(autoincrement())
  firstName          String   @unique
  lastName           String   @unique
  course             String
  year               Int
  birthdate          String
  nationality        String
  weight             Float
  height             Float
  bloodType          String
  CreatedAt          DateTime @default(now())
  UpdatedAt          DateTime @default(now()) @db.Timestamp(0)
  contact            Int
  medicalCertificate String?
  sportId            Int?
  sport              sports?   @relation(fields: [sportId], references: [id])

  @@index([sportId], map: "student_sportId_fkey")
}

model user {
  id        Int      @id @default(autoincrement())
  firstName String   @unique(map: "User_firstName_key")
  lastName  String   @unique(map: "User_lastName_key")
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime
}


enum events_eventType {
  INTERNAL
  EXTERNAL
}

enum SportCategory {
 DoTA 
 Valorant
 SwimmingMen
 SwimmingWomen
 BasketballMen
 BasketballWomen
}