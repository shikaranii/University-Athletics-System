// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//person is categorized into faculty and student
model User {
  id                     Int    @id @default(autoincrement())
  firstName              String @unique
  lastName               String @unique
  // timestaps for when the record is created and last updated
  createdAt DateTime @default(now()) @map("CreatedAt")
  updatedAt DateTime @updatedAt @map("UpdatedAt")
}

model Student {
  id                     Int      @id @default(autoincrement())
  firstName              String   @unique
  lastName               String   @unique
  course                 String
  courseId               Int      @map("CourseId")
  year                   Int
  emergencyContact       Int
  emergencyContactPerson String
  nationality            String
  weight                 Float
  height                 Float
  bloodType              String
  acadYear               Int
  statusId               Int      @map("StatusId")
  status                 Status   @relation(fields: [statusId], references: [id])
  // 
  createdAt              DateTime @default(now()) @map("CreatedAt")
  updatedAt              DateTime @updatedAt @map("UpdatedAt")
}

model Faculty {
  id                     Int      @id @default(autoincrement())
  courseId               Int      @map("CourseId")
  year                   Int
  emergencyContact       Int
  emergencyContactPerson String
  nationality            String
  weight                 Float
  height                 Float
  bloodType              String
  acadYear               Int
  statusId               Int      @map("StatusId")
  status                 Status   @relation(fields: [statusId], references: [id])
  // 
  createdAt              DateTime @default(now()) @map("CreatedAt")
  updatedAt              DateTime @updatedAt @map("UpdatedAt")
}

model Status {
  id       Int       @id @default(autoincrement())
  type     String
  isActive Boolean
  Student  Student[]
  Faculty  Faculty[]
}

model Sport {
  id            Int           @id @default(autoincrement())
  name          String
  sportCategory SportCategory
  //should add student model, connect student model to sport

  createdAt DateTime @default(now()) @map("CreatedAt")
  updatedAt DateTime @updatedAt @map("UpdatedAt")
}

model Events {
  id           Int       @id @default(autoincrement())
  name         String
  startDate    DateTime
  endDate      DateTime
  eventType    EventType
  sportId      Int       @map("SportId")
  eventDetails String?

  createdAt DateTime @default(now()) @map("CreatedAt")
  updatedAt DateTime @updatedAt @map("UpdatedAt")
}

model InventoryItems {
  id      Int    @id @default(autoincrement())
  name    String @unique
  sportId Int    @map("SportId")
}

enum EventType {
  INTERNAL
  EXTERNAL
}

enum SportCategory {
  MEN
  WOMEN
}
